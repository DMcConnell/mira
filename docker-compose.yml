services:
  redis:
    image: redis:7
    restart: unless-stopped
    ports: ['6379:6379']
    volumes:
      - redis_data:/data

  control-plane:
    restart: unless-stopped
    build: ./control-plane
    ports: ['8090:8090']
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
    volumes:
      - ./control-plane/data:/app/data
    depends_on:
      - redis

  server:
    restart: unless-stopped
    build: ./backend
    ports: ['8080:8080']
    environment:
      - DATA_DIR=${DATA_DIR:-/app/data}
      - PROVIDERS_WEATHER_MODE=${PROVIDERS_WEATHER_MODE:-mock}
      - PROVIDERS_NEWS_MODE=${PROVIDERS_NEWS_MODE:-mock}
      - CONTROL_PLANE_URL=${CONTROL_PLANE_URL:-http://control-plane:8090}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - CONTROL_PLANE_DB=${CONTROL_PLANE_DB:-/app/data/control_plane.db}
      - JWT_SECRET=${JWT_SECRET:-dev-secret-change-in-production}
      - MIRA_PIN=${MIRA_PIN:-1234}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
    volumes:
      - ./control-plane/data:/app/data
    depends_on:
      - control-plane
      - redis

  web:
    restart: unless-stopped
    build: ./frontend
    ports: ['80:80']
    depends_on:
      - server
      - control-plane

volumes:
  redis_data:
